package airlineinfo;

import java.time.LocalDate;

/** Class Ticket - represents tickets for some flight. 
 * properties: price is for the final price for the ticket, with all the factors taken into account; 
 * flight - what flight is this ticket for; 
 * paidFor - whether the client has paid for this ticket.
 * @author Anastasia
 */

public class Ticket extends Flight {
	
	public Ticket(LocalDate flightDate, int flightSeatsLeft) {
		super(flightDate, flightSeatsLeft);
		// TODO Auto-generated constructor stub
	}

	private double price;
	//private Flight flight;
	private boolean paidFor;
	
	//getters and setters
	
	public double getPrice() {
		return price;
	}
	
	/** One of the two setters for the price: 
	 * the basic one; 
	 * @param ticketPrice
	 */
	public void setPrice(double ticketPrice) {
		price=ticketPrice;
	}
	
	/*public Flight getFlight() {
		return flight;
	}
	
	public void setFlight(Flight ticketFlight)
	{
		flight=ticketFlight;
	}*/
	
	
	public boolean isPaidFor() {
		return paidFor;
	}

	public void setPaidFor(boolean paidFor) {
		this.paidFor = paidFor;
	}


	//Overridden methods (automatically generated)
	
	/* Overridden hashCode():
	 * will always return the same result; 
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + (paidFor ? 1231 : 1237);
		long temp;
		temp = Double.doubleToLongBits(price);
		result = prime * result + (int) (temp ^ (temp >>> 32));
		return result;
	}

	/* Overridden equals(): 
	 * compare the properties of the objects 
	 * and some other stuff; 
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Ticket other = (Ticket) obj;
		if (paidFor != other.paidFor)
			return false;
		if (Double.doubleToLongBits(price) != Double.doubleToLongBits(other.price))
			return false;
		return true;
	}

	/* Overridden toString(): 
	 * returns some info about the object parameters in a string; 
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString() {
		return "Ticket [price=" + price + ", paidFor=" + paidFor + "]";
	}

	
	

	
	

	
	
}
