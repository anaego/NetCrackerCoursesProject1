package clientinfo;

import airlineinfo.Flight;
import airlineinfo.Ticket;

public class Client extends Human {
	
	private int luggageWeight;
	private boolean registerFirst;
	
	/** Constructor for Client; 
	 * @param name - for establishing the client's name
	 */
	public Client(String name) {
		super(name);
		// TODO Auto-generated constructor stub
	}
	
	//getters and setters
	
	public int getLuggageWeight() {
		return luggageWeight;
	}
	
	public void setLuggageWeight(int clientLuggageWeight) {
		luggageWeight=clientLuggageWeight;
	}
	
	public boolean getRegisterFirst() {
		return registerFirst;
	}
	
	public void setRegisterFirst(boolean clientRegisterFirst) {
		registerFirst=clientRegisterFirst;
	}
	
	//important methods
	
	/** Method for ordering the ticket - creating the ticket object 
	 * with a set price; 
	 * @param flightInfo - Flight type object with information about the flight; 
	 * @param luggageWeight - the amount of client's luggage; 
	 * @param registerFirst - whether the client requested the first priority boarding; 
	 * @return
	 */
	public Ticket orderTicket(Flight flightInfo, int luggageWeight, boolean registerFirst) {
		
		Ticket ticket = new Ticket();
		
		if (flightInfo.getSeatsLeft()!=0) {
			ticket.setFlight(flightInfo);
			ticket.setPrice(flightInfo, luggageWeight, registerFirst);
			System.out.println("The ticket is ordered");
			System.out.println("The price is " + ticket.getPrice());			
		} else {
			System.out.println("There are no seats left on this flight");
		}
		
		return ticket;
	}
	
	/**Method for paying for the ticket; 
	 * !currently i have no idea how it should be done (bank transaction???); 
	 * @param ticket - information about the ticket the client is paying for
	 */
	public void payForTicket(Ticket ticket) {
		
		//bank transaction???
		
		ticket.setPaidFor(true);
				
		System.out.print("The ticket is paid for");
	}

	//Overridden methods (automatically generated)
	
		/* Overridden hashCode(); 
		 * will always return the same result; 
		 * @see java.lang.Object#hashCode()
		 */
		
		/* Overridden equals(): 
		 * compare the properties of the objects; 
		 * and some other stuff; 
		 * @see java.lang.Object#equals(java.lang.Object)
		 */
		
		
		/* Overridden toString(): 
		 * returns some info about the object parameters in a string; 
		 * @see java.lang.Object#toString()
		 */
	

	

}
