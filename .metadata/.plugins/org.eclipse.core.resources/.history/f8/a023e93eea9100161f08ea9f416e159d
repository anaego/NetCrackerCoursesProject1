
public class Flight {
	
	private String date;
	private int seatsLeft;
	private double basicPrice;
	private double luggagePrice;
	private float registerFirstPrice;
	
	//Constructor for initializing some flight info
	public Flight(String flightDate, int flightSeatsLeft, double flightBasicPrice)
	{
		setDate(flightDate);
		setSeatsLeft(flightSeatsLeft);
		setBasicPrice(flightBasicPrice);
	}
	
	//getters and setters
	
	public String getDate()
	{
		return date;
	}
	
	public void setDate(String flightDate)
	{
		date=flightDate;
	}
	
	public int getSeatsLeft()
	{
		return seatsLeft;
	}
	
	public void setSeatsLeft(int flightSeatsLeft)
	{
		seatsLeft=flightSeatsLeft;
	}
	
	public double getBasicPrice()
	{
		return basicPrice;
	}
	
	public void setBasicPrice(double flightBasicPrice)
	{
		basicPrice=flightBasicPrice;
	}
	
	public double getLuggagePrice() 
	{
		return luggagePrice;
	}

	public void setLuggagePrice(double luggagePrice) 
	{
		this.luggagePrice = luggagePrice;
	}

	public float getRegisterFirstPrice() 
	{
		return registerFirstPrice;
	}

	public void setRegisterFirstPrice(float registerFirstPrice) 
	{
		this.registerFirstPrice = registerFirstPrice;
	}
	
	//Overridden methods (automatically generated)

	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		long temp;
		temp = Double.doubleToLongBits(basicPrice);
		result = prime * result + (int) (temp ^ (temp >>> 32));
		result = prime * result + ((date == null) ? 0 : date.hashCode());
		result = prime * result + seatsLeft;
		return result;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Flight other = (Flight) obj;
		if (Double.doubleToLongBits(basicPrice) != Double.doubleToLongBits(other.basicPrice))
			return false;
		if (date == null) {
			if (other.date != null)
				return false;
		} else if (!date.equals(other.date))
			return false;
		if (seatsLeft != other.seatsLeft)
			return false;
		return true;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString() {
		return "Flight [date=" + date + ", seatsLeft=" + seatsLeft + ", basicPrice=" + basicPrice + "]";
	}
	
	
}
